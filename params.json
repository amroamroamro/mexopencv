{"name":"mexopencv","tagline":"A collection and a development kit of MATLAB MEX-functions for OpenCV library","body":"The package provides MATLAB MEX functions that interface a hundred of\r\nOpenCV APIs. Also the package contains C++ class that converts between\r\nMATLAB's native data type and OpenCV data types. The package is suitable for\r\nfast prototyping of OpenCV application in MATLAB, use of OpenCV as an external\r\ntoolbox in MATLAB, and development of a custom MEX function.\r\n\r\nDocumentation\r\n=============\r\n\r\n* [User documentation](./matlab/index.html)\r\n* [Developer documentation](./cpp/index.html)\r\n\r\nGetting Started\r\n===============\r\n\r\nHere is an example to detect faces in an image using the Haar Feature-based Cascade Classifier:\r\n\r\n```matlab\r\n% Load the classifier file\r\nxmlfile = fullfile(mexopencv.root(),'test','haarcascade_frontalface_alt2.xml');\r\ncascade = cv.CascadeClassifier(xmlfile);\r\n\r\n% Load the source image\r\nsrc = imread('people.jpg');\r\n\r\n% Convert to grayscale\r\ngray = cv.cvtColor(src, 'RGB2GRAY');\r\ngray = cv.equalizeHist(gray);\r\n\r\n% Perform the detection and draw the detected faces\r\nfaces = cascade.detect(gray, 'ScaleFactor',1.1, 'MinNeighbors',4);\r\nfor i=1:length(faces)\r\n\tsrc = cv.rectangle(src, faces{i}, 'Color',[0,255,0], 'Thickness',2);\r\nend\r\nimshow(src)\r\n```\r\n\r\nLicense\r\n=======\r\n\r\nThe code may be redistributed under the\r\n[BSD 3-Clause license](http://www.opensource.org/licenses/BSD-3-Clause).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}